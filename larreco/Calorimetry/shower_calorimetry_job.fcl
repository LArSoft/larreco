#include "services_dune.fcl"
#include "ShowerCalorimetry.fcl" 
#include "calorimetry.fcl"

process_name: ShowerCalorimetry

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  WireReadout:       @local::dune_geometry_helper
  Geometry:                     @local::protodune_geo
  DetectorClocksService:        @local::dunefd_detectorclocks
  DetectorPropertiesService:    @local::protodune_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft  
  DatabaseUtil:                 @local::dunefd_database
  ChannelStatusService:         @local::dunefd_channel_status
  @table::protodune_services

  #TFileService: { #closeFileFast: true
  #                fileName: "shower_calo_hist.root" #can be overridden by '-T'
  #              }
}
services.message.destinations.LogStandardOut.threshold: "INFO"

source:
{
  module_type: RootInput
  maxEvents: -1
}

outputs:
{
 out1:
  {
    module_type: RootOutput
    fileName:    "shower_calo.root" #default file name, can override from command line with -o or --output
    dataTier:    "reconstructed"
    
  }
}

physics:
{
 producers:
 {
  showercalo:          @local::shower_calorimetry
 }

 produce:  [ showercalo ]
 stream1: [ out1 ]

 trigger_paths:     [ produce ]
 end_paths:         [ stream1 ]
}

physics.producers.showercalo.CorrectSCE: true
services.SpaceCharge.CalibrationInputFilename: "SpaceChargeProtoDUNE/SCE_DataDriven_180kV_v2.root"
services.SpaceCharge.RepresentationType: "Voxelized_TH3"
services.SpaceCharge.EnableCalSpatialSCE: false
